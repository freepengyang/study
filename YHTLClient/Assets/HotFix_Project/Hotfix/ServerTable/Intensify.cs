// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Intensify.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace intensify {

  #region Messages
  /// <summary>
  ///强化信息信息
  /// </summary>
  public sealed class IntensifyInfo : pb::IMessage {
    private static readonly pb::MessageParser<IntensifyInfo> _parser = new pb::MessageParser<IntensifyInfo>(() => new IntensifyInfo());
    public static pb::MessageParser<IntensifyInfo> Parser { get { return _parser; } }

    private int position_;
    /// <summary>
    ///部位
    /// </summary>
    public int position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    private int intensifyLv_;
    /// <summary>
    ///强化等级
    /// </summary>
    public int intensifyLv {
      get { return intensifyLv_; }
      set {
        intensifyLv_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (position != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(position);
      }
      if (intensifyLv != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(intensifyLv);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (position != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(position);
      }
      if (intensifyLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(intensifyLv);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            position = input.ReadInt32();
            break;
          }
          case 16: {
            intensifyLv = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///推送给客户端的强化数据
  /// </summary>
  public sealed class IntensifyInfoResponse : pb::IMessage {
    private static readonly pb::MessageParser<IntensifyInfoResponse> _parser = new pb::MessageParser<IntensifyInfoResponse>(() => new IntensifyInfoResponse());
    public static pb::MessageParser<IntensifyInfoResponse> Parser { get { return _parser; } }

    private static readonly pb::FieldCodec<global::intensify.IntensifyInfo> _repeated_intensifyInfos_codec
        = pb::FieldCodec.ForMessage(10, global::intensify.IntensifyInfo.Parser);
    private readonly pbc::RepeatedField<global::intensify.IntensifyInfo> intensifyInfos_ = new pbc::RepeatedField<global::intensify.IntensifyInfo>();
    /// <summary>
    ///强化信息
    /// </summary>
    public pbc::RepeatedField<global::intensify.IntensifyInfo> intensifyInfos {
      get { return intensifyInfos_; }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      intensifyInfos_.WriteTo(output, _repeated_intensifyInfos_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += intensifyInfos_.CalculateSize(_repeated_intensifyInfos_codec);
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            intensifyInfos_.AddEntriesFrom(input, _repeated_intensifyInfos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed class IntensifySuitInfoResponse : pb::IMessage {
    private static readonly pb::MessageParser<IntensifySuitInfoResponse> _parser = new pb::MessageParser<IntensifySuitInfoResponse>(() => new IntensifySuitInfoResponse());
    public static pb::MessageParser<IntensifySuitInfoResponse> Parser { get { return _parser; } }

    private global::intensify.IntensifySuitInfo intensifySuitInfo_;
    /// <summary>
    ///套装失效时间信息
    /// </summary>
    public global::intensify.IntensifySuitInfo intensifySuitInfo {
      get { return intensifySuitInfo_; }
      set {
        intensifySuitInfo_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (intensifySuitInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(intensifySuitInfo);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (intensifySuitInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(intensifySuitInfo);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (intensifySuitInfo_ == null) {
              intensifySuitInfo_ = new global::intensify.IntensifySuitInfo();
            }
            input.ReadMessage(intensifySuitInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///部位强化请求
  /// </summary>
  public sealed class IntensifyRequest : pb::IMessage {
    private static readonly pb::MessageParser<IntensifyRequest> _parser = new pb::MessageParser<IntensifyRequest>(() => new IntensifyRequest());
    public static pb::MessageParser<IntensifyRequest> Parser { get { return _parser; } }

    private int position_;
    /// <summary>
    ///部位
    /// </summary>
    public int position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    private bool useJingpoItem_;
    /// <summary>
    ///是否使用精魄道具
    /// </summary>
    public bool useJingpoItem {
      get { return useJingpoItem_; }
      set {
        useJingpoItem_ = value;
      }
    }

    private bool useDingxingItem_;
    /// <summary>
    ///是否使用掉星保护道具
    /// </summary>
    public bool useDingxingItem {
      get { return useDingxingItem_; }
      set {
        useDingxingItem_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (position != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(position);
      }
      if (useJingpoItem != false) {
        output.WriteRawTag(16);
        output.WriteBool(useJingpoItem);
      }
      if (useDingxingItem != false) {
        output.WriteRawTag(24);
        output.WriteBool(useDingxingItem);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (position != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(position);
      }
      if (useJingpoItem != false) {
        size += 1 + 1;
      }
      if (useDingxingItem != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            position = input.ReadInt32();
            break;
          }
          case 16: {
            useJingpoItem = input.ReadBool();
            break;
          }
          case 24: {
            useDingxingItem = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed class IntensifySuitInfo : pb::IMessage {
    private static readonly pb::MessageParser<IntensifySuitInfo> _parser = new pb::MessageParser<IntensifySuitInfo>(() => new IntensifySuitInfo());
    public static pb::MessageParser<IntensifySuitInfo> Parser { get { return _parser; } }

    private int suitId_;
    /// <summary>
    ///套装id
    /// </summary>
    public int suitId {
      get { return suitId_; }
      set {
        suitId_ = value;
      }
    }

    private long endTime_;
    /// <summary>
    ///套装失效时间
    /// </summary>
    public long endTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (suitId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(suitId);
      }
      if (endTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(endTime);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (suitId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(suitId);
      }
      if (endTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(endTime);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            suitId = input.ReadInt32();
            break;
          }
          case 16: {
            endTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///部位强化返回
  /// </summary>
  public sealed class IntensifyResponse : pb::IMessage {
    private static readonly pb::MessageParser<IntensifyResponse> _parser = new pb::MessageParser<IntensifyResponse>(() => new IntensifyResponse());
    public static pb::MessageParser<IntensifyResponse> Parser { get { return _parser; } }

    private global::intensify.IntensifyInfo intensifyInfo_;
    /// <summary>
    ///强化信息
    /// </summary>
    public global::intensify.IntensifyInfo intensifyInfo {
      get { return intensifyInfo_; }
      set {
        intensifyInfo_ = value;
      }
    }

    private bool result_;
    /// <summary>
    ///是否强化成功
    /// </summary>
    public bool result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (intensifyInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(intensifyInfo);
      }
      if (result != false) {
        output.WriteRawTag(16);
        output.WriteBool(result);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (intensifyInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(intensifyInfo);
      }
      if (result != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (intensifyInfo_ == null) {
              intensifyInfo_ = new global::intensify.IntensifyInfo();
            }
            input.ReadMessage(intensifyInfo_);
            break;
          }
          case 16: {
            result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
