//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// <auto-generated>
//------------------------------------------------------------------------------

// Generated from: protos/c_table_scenetrigger.proto
using System.Collections.Generic;
public partial class SceneTriggerTableManager : TableManager<TABLE.SCENETRIGGERARRAY, TABLE.SCENETRIGGER,int,SceneTriggerTableManager>
{
	public override bool TryGetValue(int key, out TABLE.SCENETRIGGER tbl)
	{
		tbl = null;
		if (array == null || array.gItem == null)
			return false;
		TableHandle handle = null;
		if (array.gItem.id2offset.TryGetValue(key, out handle))
		{
			tbl = handle.Value as TABLE.SCENETRIGGER;
		}
		return null != tbl;
	}
	public int GetSceneTriggerId(int id,int defaultValue = default(int))
	{
		TABLE.SCENETRIGGER cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.id;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetSceneTriggerType(int id,uint defaultValue = default(uint))
	{
		TABLE.SCENETRIGGER cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.type;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetSceneTriggerParam(int id,uint defaultValue = default(uint))
	{
		TABLE.SCENETRIGGER cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.param;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetSceneTriggerX(int id,int defaultValue = default(int))
	{
		TABLE.SCENETRIGGER cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.x;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetSceneTriggerY(int id,int defaultValue = default(int))
	{
		TABLE.SCENETRIGGER cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.y;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetSceneTriggerEffectId(int id,int defaultValue = default(int))
	{
		TABLE.SCENETRIGGER cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.effectId;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetSceneTriggerTriggerPara(int id,uint defaultValue = default(uint))
	{
		TABLE.SCENETRIGGER cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.triggerPara;
		}
		else
		{
			return defaultValue;
		}
	}
}