//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// <auto-generated>
//------------------------------------------------------------------------------

// Generated from: protos/c_table_mapinfo.proto
using System.Collections.Generic;
public partial class MapInfoTableManager : TableManager<TABLE.MAPINFOARRAY, TABLE.MAPINFO,int,MapInfoTableManager>
{
	public override bool TryGetValue(int key, out TABLE.MAPINFO tbl)
	{
		tbl = null;
		if (array == null || array.gItem == null)
			return false;
		TableHandle handle = null;
		if (array.gItem.id2offset.TryGetValue(key, out handle))
		{
			tbl = handle.Value as TABLE.MAPINFO;
		}
		return null != tbl;
	}
	public int GetMapInfoId(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.id;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoName(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.name;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetMapInfoType(int id,uint defaultValue = default(uint))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.type;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoMapSize(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.mapSize;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoMapSize1(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.mapSize1;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoImg(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.img;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoPkMode(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.pkMode;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoBgm(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.bgm;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoRelivePanelType(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.relivePanelType;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoReliveCoord(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.reliveCoord;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoReliveTime(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.reliveTime;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoMapPKMode(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.mapPKMode;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoCancross(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.cancross;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoTips(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.tips;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoFirstTransfer(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.firstTransfer;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoBanTransfer(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.banTransfer;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMapInfoWithHero(int id,int defaultValue = default(int))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.withHero;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoLimit(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.limit;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoTotalTime(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.totalTime;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoOpenEvent(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.openEvent;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoLimitTimes(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.limitTimes;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoHome(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.home;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoParam1(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.param1;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoParam2(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.param2;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMapInfoDesc(int id,string defaultValue = default(string))
	{
		TABLE.MAPINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.desc;
		}
		else
		{
			return defaultValue;
		}
	}
}