//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// <auto-generated>
//------------------------------------------------------------------------------

// Generated from: protos/c_table_hunli.proto
using System.Collections.Generic;
public partial class HunLiTableManager : TableManager<TABLE.HUNLIARRAY, TABLE.HUNLI,int,HunLiTableManager>
{
	public override bool TryGetValue(int key, out TABLE.HUNLI tbl)
	{
		tbl = null;
		if (array == null || array.gItem == null)
			return false;
		TableHandle handle = null;
		if (array.gItem.id2offset.TryGetValue(key, out handle))
		{
			tbl = handle.Value as TABLE.HUNLI;
		}
		return null != tbl;
	}
	public int GetHunLiId(int id,int defaultValue = default(int))
	{
		TABLE.HUNLI cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.id;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetHunLiType(int id,int defaultValue = default(int))
	{
		TABLE.HUNLI cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.type;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetHunLiClienttip(int id,int defaultValue = default(int))
	{
		TABLE.HUNLI cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.clienttip;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetHunLiPlus(int id,int defaultValue = default(int))
	{
		TABLE.HUNLI cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.plus;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetHunLiPer(int id,int defaultValue = default(int))
	{
		TABLE.HUNLI cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.per;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetHunLiClientattr(int id,int defaultValue = default(int))
	{
		TABLE.HUNLI cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.clientattr;
		}
		else
		{
			return defaultValue;
		}
	}
}