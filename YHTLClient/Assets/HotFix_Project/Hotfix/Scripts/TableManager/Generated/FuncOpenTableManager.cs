//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// <auto-generated>
//------------------------------------------------------------------------------

// Generated from: protos/c_table_funcopen.proto
using System.Collections.Generic;
public partial class FuncOpenTableManager : TableManager<TABLE.FUNCOPENARRAY, TABLE.FUNCOPEN,int,FuncOpenTableManager>
{
	public override bool TryGetValue(int key, out TABLE.FUNCOPEN tbl)
	{
		tbl = null;
		if (array == null || array.gItem == null)
			return false;
		TableHandle handle = null;
		if (array.gItem.id2offset.TryGetValue(key, out handle))
		{
			tbl = handle.Value as TABLE.FUNCOPEN;
		}
		return null != tbl;
	}
	public int GetFuncOpenId(int id,int defaultValue = default(int))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.id;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetFuncOpenFunctionId(int id,int defaultValue = default(int))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.functionId;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetFuncOpenNeedLevel(int id,int defaultValue = default(int))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.needLevel;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetFuncOpenOpenday(int id,int defaultValue = default(int))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.openday;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetFuncOpenNeedType(int id,int defaultValue = default(int))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.needType;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetFuncOpenTypeParam(int id,string defaultValue = default(string))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.typeParam;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetFuncOpenFunctionName(int id,string defaultValue = default(string))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.functionName;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetFuncOpenShowtype(int id,int defaultValue = default(int))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.showtype;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetFuncOpenTips(int id,string defaultValue = default(string))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.tips;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetFuncOpenHerald(int id,int defaultValue = default(int))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.herald;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetFuncOpenIcon1(int id,string defaultValue = default(string))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.icon1;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetFuncOpenUnlockid(int id,int defaultValue = default(int))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.unlockid;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetFuncOpenIconunlock(int id,string defaultValue = default(string))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.iconunlock;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetFuncOpenTitle(int id,string defaultValue = default(string))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.title;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetFuncOpenDescription(int id,string defaultValue = default(string))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.description;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetFuncOpenPath(int id,string defaultValue = default(string))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.path;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetFuncOpenScale(int id,int defaultValue = default(int))
	{
		TABLE.FUNCOPEN cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.scale;
		}
		else
		{
			return defaultValue;
		}
	}
}