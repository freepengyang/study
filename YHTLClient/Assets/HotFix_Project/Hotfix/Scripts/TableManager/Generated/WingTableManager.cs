//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// <auto-generated>
//------------------------------------------------------------------------------

// Generated from: protos/c_table_wing.proto
using System.Collections.Generic;
public partial class WingTableManager : TableManager<TABLE.WINGARRAY, TABLE.WING,int,WingTableManager>
{
	public override bool TryGetValue(int key, out TABLE.WING tbl)
	{
		tbl = null;
		if (array == null || array.gItem == null)
			return false;
		TableHandle handle = null;
		if (array.gItem.id2offset.TryGetValue(key, out handle))
		{
			tbl = handle.Value as TABLE.WING;
		}
		return null != tbl;
	}
	public int GetWingId(int id,int defaultValue = default(int))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.id;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetWingRank(int id,uint defaultValue = default(uint))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.rank;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetWingModel(int id,int defaultValue = default(int))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.model;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetWingRankType(int id,uint defaultValue = default(uint))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.rankType;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetWingRankPara(int id,uint defaultValue = default(uint))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.rankPara;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetWingRankNum(int id,uint defaultValue = default(uint))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.rankNum;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetWingPic(int id,string defaultValue = default(string))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.pic;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetWingImg(int id,string defaultValue = default(string))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.img;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetWingStarID(int id,uint defaultValue = default(uint))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.starID;
		}
		else
		{
			return defaultValue;
		}
	}
	public IntArray GetWingZsstarAttrPara(int id,IntArray defaultValue = default(IntArray))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.zsstarAttrPara;
		}
		else
		{
			return defaultValue;
		}
	}
	public IntArray GetWingFsstarAttrPara(int id,IntArray defaultValue = default(IntArray))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.fsstarAttrPara;
		}
		else
		{
			return defaultValue;
		}
	}
	public IntArray GetWingDsstarAttrPara(int id,IntArray defaultValue = default(IntArray))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.dsstarAttrPara;
		}
		else
		{
			return defaultValue;
		}
	}
	public IntArray GetWingStarAttrNum(int id,IntArray defaultValue = default(IntArray))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.starAttrNum;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetWingStarCostExp(int id,uint defaultValue = default(uint))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.starCostExp;
		}
		else
		{
			return defaultValue;
		}
	}
	public LongArray GetWingStarCost(int id,LongArray defaultValue = default(LongArray))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.starCost;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetWingPrimaryKey(int id,int defaultValue = default(int))
	{
		TABLE.WING cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.PrimaryKey;
		}
		else
		{
			return defaultValue;
		}
	}
}