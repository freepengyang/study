//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// <auto-generated>
//------------------------------------------------------------------------------

// Generated from: protos/c_table_npc.proto
using System.Collections.Generic;
public partial class NpcTableManager : TableManager<TABLE.NPCARRAY, TABLE.NPC,int,NpcTableManager>
{
	public override bool TryGetValue(int key, out TABLE.NPC tbl)
	{
		tbl = null;
		if (array == null || array.gItem == null)
			return false;
		TableHandle handle = null;
		if (array.gItem.id2offset.TryGetValue(key, out handle))
		{
			tbl = handle.Value as TABLE.NPC;
		}
		return null != tbl;
	}
	public int GetNpcId(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.id;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetNpcName(int id,string defaultValue = default(string))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.name;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetNpcFunc(int id,string defaultValue = default(string))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.func;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetNpcSay(int id,string defaultValue = default(string))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.say;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetNpcMonsterId(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.monsterId;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetNpcModel(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.model;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetNpcDirection(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.direction;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetNpcOpenPanel(int id,string defaultValue = default(string))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.openPanel;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetNpcBornX(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.bornX;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetNpcBornY(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.bornY;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetNpcSceneId(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.sceneId;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetNpcHeadHeight(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.headHeight;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetNpcHeight(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.height;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetNpcTitle(int id,int defaultValue = default(int))
	{
		TABLE.NPC cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.title;
		}
		else
		{
			return defaultValue;
		}
	}
}