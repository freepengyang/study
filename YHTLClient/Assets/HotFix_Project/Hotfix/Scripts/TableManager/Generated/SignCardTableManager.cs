//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// <auto-generated>
//------------------------------------------------------------------------------

// Generated from: protos/c_table_signcard.proto
using System.Collections.Generic;
public partial class SignCardTableManager : TableManager<TABLE.SIGNCARDARRAY, TABLE.SIGNCARD,int,SignCardTableManager>
{
	public override bool TryGetValue(int key, out TABLE.SIGNCARD tbl)
	{
		tbl = null;
		if (array == null || array.gItem == null)
			return false;
		TableHandle handle = null;
		if (array.gItem.id2offset.TryGetValue(key, out handle))
		{
			tbl = handle.Value as TABLE.SIGNCARD;
		}
		return null != tbl;
	}
	public int GetSignCardId(int id,int defaultValue = default(int))
	{
		TABLE.SIGNCARD cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.id;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetSignCardName(int id,string defaultValue = default(string))
	{
		TABLE.SIGNCARD cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.name;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetSignCardPic(int id,string defaultValue = default(string))
	{
		TABLE.SIGNCARD cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.pic;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetSignCardIcon(int id,string defaultValue = default(string))
	{
		TABLE.SIGNCARD cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.icon;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetSignCardQuality(int id,int defaultValue = default(int))
	{
		TABLE.SIGNCARD cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.quality;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetSignCardRecycleNum(int id,int defaultValue = default(int))
	{
		TABLE.SIGNCARD cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.recycleNum;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetSignCardPerfert(int id,int defaultValue = default(int))
	{
		TABLE.SIGNCARD cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.perfert;
		}
		else
		{
			return defaultValue;
		}
	}
}