//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// <auto-generated>
//------------------------------------------------------------------------------

// Generated from: protos/c_table_monsterinfo.proto
using System.Collections.Generic;
public partial class MonsterInfoTableManager : TableManager<TABLE.MONSTERINFOARRAY, TABLE.MONSTERINFO,int,MonsterInfoTableManager>
{
	public override bool TryGetValue(int key, out TABLE.MONSTERINFO tbl)
	{
		tbl = null;
		if (array == null || array.gItem == null)
			return false;
		TableHandle handle = null;
		if (array.gItem.id2offset.TryGetValue(key, out handle))
		{
			tbl = handle.Value as TABLE.MONSTERINFO;
		}
		return null != tbl;
	}
	public int GetMonsterInfoId(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.id;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetMonsterInfoType(int id,uint defaultValue = default(uint))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.type;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoSupType(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.supType;
		}
		else
		{
			return defaultValue;
		}
	}
	public string GetMonsterInfoName(int id,string defaultValue = default(string))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.name;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetMonsterInfoLevel(int id,uint defaultValue = default(uint))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.level;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoModel(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.model;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetMonsterInfoHp(int id,uint defaultValue = default(uint))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.hp;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetMonsterInfoMp(int id,uint defaultValue = default(uint))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.mp;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoAtt(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.att;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoAttMax(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.attMax;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoPhyDef(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.phyDef;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoPhyDefMax(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.phyDefMax;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoMagicDef(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.magicDef;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoMagicDefMax(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.magicDefMax;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoAccurate(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.accurate;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoDodge(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.dodge;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoHeathRecover(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.heathRecover;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoMagicRecover(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.magicRecover;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoShield(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.Shield;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoShieldRecover(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.ShieldRecover;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoCriticalDamage(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.criticalDamage;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoCritical(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.critical;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetMonsterInfoMoveInterval(int id,uint defaultValue = default(uint))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.moveInterval;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoHead(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.head;
		}
		else
		{
			return defaultValue;
		}
	}
	public uint GetMonsterInfoInitDirection(int id,uint defaultValue = default(uint))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.initDirection;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoNoAttack(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.noAttack;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoPropertiesSuit(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.PropertiesSuit;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoShowName(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.showName;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoQuality(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.quality;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoBottomMark(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.bottomMark;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoOwnerType(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.ownerType;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoHeadHeight(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.headHeight;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoBossCarnivalPoints(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.bossCarnivalPoints;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoHeight(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.height;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoShowType(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.showType;
		}
		else
		{
			return defaultValue;
		}
	}
	public int GetMonsterInfoNewModel(int id,int defaultValue = default(int))
	{
		TABLE.MONSTERINFO cfg = null;
		if(TryGetValue(id,out cfg))
		{
			return cfg.newModel;
		}
		else
		{
			return defaultValue;
		}
	}
}