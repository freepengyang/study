
useradd -c添加描述信息
-d 添加用户的家目录
-g 新账户的主组
-G 新账户添加附加组
-s 新账户登陆的shell

userdel -r 删除用户，包括家目录和mail文件

usermod -c 修改用户描述信息
-d修改用户的主目录
-g修改用户的主组
-G 修改用户的附加组
-a 附加追入附加组与G一起使用
-s修改用户登陆的shell
gpasswd 的用法

-a 添加组成员
-d 删除组成员
-M 添加多个组成员
-r 删除组密码
修改文件的所属主和所属组

chown chgrp
修改文件的所有者和所属组

-R递归修改，修改目录的同时会作用于目录下的文件和目录

passwd 修改用户密码
-l 锁定用户
-u 解锁用户
-S 查看用户密码状态
--stadin 标准输入密码 echo 123 >passwd --stdin peter

setfacl -m u：用户名：权限  file 添加用户访问列表
setfacl -x u：用户名：权限  file 删除用户访问列表
-b 删除全部用户的访问控制列表


chatrr 修改文件目录的隐藏权限
chattr +a file  只能追加
lsattr 查看文件的隐藏权限

分区表的类型
mbr最大支持2tb以内的硬盘，4个主分区
gpt 128个分区

使用fdisk -l查看所有的磁盘分区
fdisk -l 后面接指定的磁盘，可以查看指定磁盘的分区
进入fdisk交互指令中心
n创建分区，p查看分区
d 接标号，删除分区
w分区写入磁盘，保存退出
通知内核重读分区
partx -a 后面接指定的磁盘名字

创建文件系统
mkfs.xfs  -f 强制制作文件系统
挂载
用parted命令创建分区的方法
parted 接磁盘名字 mkpart primary 

制作swap分区
准备新分区
格式化分区的文件系统
mkswap 后面接分区名
激活swap分区
swapon 后面接分区名
 查看swap 用swapon -d 或swapon -s
磁盘配额
进行磁盘配额
需要内核支持磁盘配额
查看命令grep -i quota  /boot/config-3.10.0-514.el7.x86_64 
查看挂载的文件系统是否支持，磁盘配额
mount |grep /dev/sr0，默认是不支持的
让文件系统支持磁盘配额
先卸载挂载的磁盘分区
然后更改分区属性
mount -o usrquota,grpquota,prjquota

制作软raid
mdadm -C /dev/md0 -l 5 -n 3 -x 1  /dev/sdc{1..4}
制作配置文件：将当前raid信息保存至配置文件，已便以后进行装配
格式化文件系统然后再进行挂载

# mdadm -Ds  >  /etc/mdadm.conf 写入配置文件装载


umount /dev/md0 先卸载  mdadm -S /dev/md0 关闭阵列
mdadm命令的用法
-C创建阵列
-D查看已经创建好的阵列
-r 从阵列中删除设备
-a 添加新设备到阵列中
-S 停止阵列
-A 重新激活阵列

安装的两个命令
rpm -ivh 后面接包全名可安装
--force 强制安装+
rpm -e 接包名，卸载
-nodeps 不依赖包强制卸载
查询已安装的软件包
 
为用户添加访问控制列表
setfacl -m u：用户名：权限  后面接文件名
移除单个用户的访问控制列表 -x
删除全部的用户访问控制列表用-b

getfacl 接文件名可查看用户的访问控制


lvm磁盘分区管理

创建物理磁盘
加入卷组
在卷组里创建逻辑卷
格式化
装载
创建快照
lvcreate -s -n lv0.snap -L 1G  /dev/vg0/lv0
为逻辑卷创建一个1g大的快照空间
如果需要恢复快照的话
需要先对挂载点进行卸载
然后敲写命令
lvconvert --merge  /dev/vg0/lv0.snap
vgs查看卷组空间，空间又回来了

osi开放系统互联
open system internet

七层 应用层 表示层 会话层  
传输层，网络层 数据链接层 物理层

四层 应用层 传输层 网络层 网络接口层
tcp 传输控制协议
适合传输大数据，速度慢，安全性高
udp 用户数据报协议
适合传输小数据，速度快 ，安全性差

网关的创建
临时生效route add default gw ip地址
永久生效 
/etc/sysconfig/network-srcipts/ifcfg-网卡名称  GETWAY后面接网关地址


[root@localhost lib64]# cp /lib64/libtinfo.so.5.9 .
[root@localhost lib64]# ln -s  /lib64/libtinfo.so.5.9  /test/lib64/libtinfo.so.5
[root@localhost lib64]#  cp /lib64/libdl-2.17.so .
[root@localhost lib64]# ln -s  /lib64/libdl-2.17.so  /test/lib64/libdl.so.2
[root@localhost lib64]# 
[root@localhost lib64]#  cp /lib64/libc-2.17.so .
[root@localhost lib64]# ln -s /lib64/libc-2.17.so /test/lib64/libc.so.6
[root@localhost lib64]# cp /lib64/ld-2.17.so .
[root@localhost lib64]# ln -s /lib64/ld-2.17.so  /test/lib64/ld-linux-x86-64.so.2


计算器五大组成部分
运算器，控制器，存储器，输入设备，输出设备

apache 排名第一的web服务软件
优点：开源，支持二次开发，稳定好，支持多种操作系统和编程语言
apache的三种工作模式
prefork 优点：成熟稳定，线程安全性好
缺点一个进程消耗更多的内存，不擅长处理高并发的请求
worker 
优点：占据更少的内存，高并发下表现更优秀

缺点：必须考虑线程安全的问题，因为多个子进程共享父进程的内存地址

正则表达式匹配过程
1，从左到右
2，贪婪匹配
.匹配任意单个字符
[...]匹配中括号的任意一个字符 ^在中括号内第一位为否定匹配,只能放在第一位才能取反

tar czf caf 使用归档名后缀来决定压缩程序
tf查询
xf压缩
yum rearch 包名的一部分 查到软件包

awk
工作模式：读如以行写进$0中，使用内置变量FS分割然后输出
语法 命令 选项 模式匹配 文件...
awk内置变量 $0,FS 字段分隔符 RS记录行的分隔符 NR记录所处理记录的总数，FNR处理当前文件记录的总数
NF记录当前行的字段数
awk的特殊模式
BEGIN{}再读取文件前执行
END{}文件处理完之后执行 都是执行一次的
都可以单独存在的
但是END后面是需要接文件的
查看当前使用的shell
echo $SHELL
变量：用来存储信息的空间
变量的值是可以变化的
有字母，数字下划线组成的，不能以数字开头，不能使用关键字
变量类型：本地变量作用域当前shell，环境变量作用与当前shell及子shell，位值变量，预定义变量
引用，${变量名}防止冲突
正则表达式， 是一种字符串的表达方式

sed -n 静默输出
-e  允许多项编辑
-f 后面接sed脚本
-i修改源文件进行备份

read -p 打印提示信息
-n 限制输入字符数量
-t限定输入时间
-s输入不显示，用于输入密码时可以使用的
-a  接受多个输入定义为数组
echo -n 除去换行符
-e支持转义

if 条件表达式
then
命令
fi
if 条件表达式
then
命令
else 
命令
fi


软链接和硬连接的区别
软链接：
会产生新的inode号
可以跨文件系创建
删除原文件后链接文件无效

硬：对主要文件做备份防止误删除
不会产生新的inode号
删除一个文件名文件不会损坏
不可以对目录操作
不可以跨文件系统创建‘

NFS 网络文件系统
优点：是局域网共享速度最快的
缺点：不支持跨平台

mount的属性
mount -o 
r0只读
rw可读写
no_root_squash

raid 磁盘阵列
raid分类
软raid 用软件实现为了提高速度，所有操作都是通过系统及cpu实现的

raid的级别

raid0 条带raid
至少2块磁盘 优点：读写 速度快 安全性差

raid1 
镜像raid 安全性高优点
缺点：占用空间，读写速度相比其他要慢

raid5
4块磁盘，如其中一块磁盘怀了。
第4块做热备

即有考虑数据的安全性，有考虑储存性能

子网掩码：是为了区分网络号和主机号的


正则表达式;一种字符串的表达方式，一般用于处理文本内容
特征，从做到有，贪婪匹配
sed语法，sed 选项 模式匹配动作 文件

模式匹配的：空行模式，行号模式，匹配模式
模式空间：用来处理文本行的，保持空间：用来保留已经处理完的文本行的

sed与awk的相同与不同
都是流编辑器，都是一行行处理的
基本语法相同
都可以进行模式匹配

不同点：sed处理行的，awk处理列的
sed 比较接处理文本，awk则不一定需要

内置变量 FS 字段分隔符，nr记录awk处理记录的总数 fnr记录当前处理记录的总数，nf当前行的字段数

awk 
1，进入工作模式，读入以行存入$0，RS记录行的分隔符的存入$1-$100，然后输出
然后输出
2，使用内置FS字段分割

模式匹配动作

空行模式

正则表达式
表达式

阿帕奇 三种工作模式
进程模式 prefork MPM 线程模式
事件模式

进程模式：成熟稳定，不用担心线程安全问题 缺点：不擅长处理高并发请求

线程模式：占据更少的内存，高并发表现更优秀
缺点：必须考虑县城安全问题，因为多个子金成时共享父金成的内存地址的

事件模式：

开机启动流程：
自检，选择引导介质，加载引导程序，加载分区表，加载内核

tcp:传输控制协议，提供面向连接的可靠数据传输，式和大数据，速度慢
udp：提供非面向连接的不可靠数据传输，传输小数据，速度快


mysql数据库管理系统，一个软件
电子文件柜 
数据库由表组成，映射程系统的目录
数据表由数据组成，映射到系统中为文件

1.mysql安装分3种
1，源码安装
优点：可根据实际环境需求定制，一台服务器可安装多个mysql
缺点：安装步骤复杂，编译时间长

rpm安装
安装简单
缺点：需要单独下载客户端和服务器端，可定制性差，一台只能安装一个

二进制安装：
安装简单可以安装到任何路径下，灵活性好，一台服务器可安装多个sql

七种文件类型
普通文件 -
目录文件 d
字符设备文件 c
块设备文件 b
陶介子文件 s
管道文件 p
软连接文件 l

特殊权限
g+s 用户执行命令时会临时获得这个命令所属组的权限

为用户设置访问权限
设置默认权限
setfacl -m d：u：用户名：权限  dirname 目录名

开机顺序：
开机自检
加载mbr的引导文件 ，识别分区文件系统，
然后加载内核

储存引擎 innodb
事务处理的特性：
原子性
一致性
隔离性
持久性

事物处理的过程
begin     rollback commit
事务开始     回滚       提交

软连接与硬连接的区别
软链接：会产生新的inode号
可以跨文件系统操作
可以对目录进行操作
删除源文件以后链接无效

 硬链接：不会产生新的inode号
不可以跨文件系统操作
不可以对目录进行操作
删除任意其他一个文件，文件是有效的
对主要文件进行备份防止误删除

域名，标示计算机在网络中的电子方位

域名递归查询：
客户机与本地服务器之间的查询属于递归查询，客户端本地dns服务发出查询请求的时候，由本地服务器进行解析，有结果则输出到客户端并且返回，如果没有会找别人来查询，如果还没有的话告诉客户端没有查到并且返回

迭代查询：
一般dns服务器之间的查询，当dns服务器向dns1服务器发起查询的时候 dns1会请求根域服务器，根域服务器会返回dns2让dns1去请求，以此类推，知道查询到结果后返回给客户端

域名解析的过程
在浏览器输入www.baidu.com请求，首先系统会检测自己本地的hosts是否由这个网络地址的映射如果有就调用这个网络地址的解析
如果没有的话会检查本地dns解析器里是否由对应的地址解析有就调用这个地址的解析
没有的话会检测本地dns本地服务器配置区域资源种是否由对应的网络地址映射
如果还没有的话检查dns服务器是否设置了转发进行查询
如果用的是转发模式此dns服务器就会将请求转发至上一级dns服务器进行解析，以此循环，最后结果返回给本地dns服务器，dns服务器将结果再返回到客机

如果没有用转发模式的话

网络代理：
代理上网
网络控制
web加速


域名的查询方式
递归查询和迭代查询
一般客户机和本地dns服务之间的查询属于递归查询当客户机向本地dns服务器发出查询请求的时候，本地dns服务器不能解析的话会找别人查询，并将查询结果返回到客户端，如果没有查到也会返回到客户端的，本地dns服务器都会给客机一定的结果的

迭代查询是指一般dns服务器之间的查询，当dns发起查询的时候，dns1会请求根域服务器，根服务器会返回dns2，dns会请求dns2以此类推，知道查询到结果到本地缓存一份，并返回给客户端

nginx
轻量级http服务

tcp 80端口

remote_addr 记录客户端的ip
remote——user 记录远程客户端的名称

代理服务器
功能：代理上网，
网络控制
web加速

代理服务器类型：
1，正向代理服务器的
目的：内网的服务器通过代理服务器访问外网的服务器
原理：内网用户将请求发送给代理器，代理器根据i客户的需求向真正的web服务器发出请求，然后获取网页内容，本地缓存一份以后再返回给客户端1
需要对浏览器进行设置
方向代理器：
目的：外网客户端通过代理服务器访问内网服务器的资源
原理：外网客户端访问正常的域名ip向代理服务器发出请求，代理服务器帮助客户端请求页面，在代理服务器缓存一份后返回给客户端

404页面找不到
403 访问被拒绝

500服务器错误
1，web脚本错误，php语法错误
2，访问量大的时候，资源限制，不能打开过多的文件

squid代理类型
正向代理：内网的服务器通过代理服务器访问外网服务器的资源

tomcat
优点：免费的
占用系统资源比较少
跨平台性好，有java环境就行

nginx 主配置文件组成部分：
1，全局块：配置影响nginx全局的指令

2，events块


3，http块，可以嵌套多个server

域名的查询方式：
递归查询和迭代查询
递归查询：一般的客机和本地dns服务器之间的查询，当客机向服务器发起查询的时候本地dns服务器不能解释的话会找别人帮忙查询，将查询结果返回到客户端，如果没有查到结果返回告诉客户没有找到
迭代查询：一般本地dns服务器之间的查询

rpm安装：优点，安装简单
缺点，需要单独下载客户端和服务器，安装路径不灵活，一台服务器只能装一个
二进制包
优点：安装简单，可以安装到任何路径下
取点：性能不如源码编译

mysql常用的存储引擎：innodb，在一连串处理的事情事务上具有优势，即支持提交，回滚，崩溃恢复特性
memory 存储位置为内存，访问速度更快不会保存数据

条带raid
将数据平均分配到磁盘上
读写速度块，安全性差
raid
第二块磁盘相当于第一块磁盘的热备
读写速快慢，安全性好
raid5
至少三块磁盘，最后一块磁盘做热备，如果其中一块磁盘坏了，会把其中写入到热备上，保证数据的安全性

加载bios 加载mbr加载mbr中引导文件boot ，识别文件系统，加载内核

zabbix 工作原理
agent打开tcp链接
请求items列表
server返回列表
agent处理响应 
关闭tcp链接
agent收集数据

提交数据的过程
建立tcp链接
提交items列表种的数据
server处理数据并返回响应状态
关闭tcp链接

ansible 特性：
1.no agents 不需要在被管控主机上安装任何客户端，只需在操作机上更新即可
2， no server 无服务器端，使用时直接运行命令即可
3，modules 基于模块工作，任意语言开发
4，yaml 使用yaml语言定制剧本
5，ssh 基于ssh工作
6，可实现多级指挥

zabbix 优点：开源免费
对设备性能要求低
支持分布时集中管理有自动发现功能，可以实现自动化监控

缺点对于数据库的负载比较的大

添加主机组，主机，监控项，图形 ，触发器，用户，报警媒介和动作

tomcat 与apache 整合
优点：
提升对静态文件处理的性能
利用web服务器做负载均衡以及容错
无缝的升级应用程序

nginx主配置文件的几大块：
1，全局块
配置影响nginx全局的指令，日志存放路径，允许生成worker process
2，events块
3，http块
4，server块
5，location块
两种加密方式：
对称加密：
加密解密使用同一把钥匙
优点：速度快，加密数据量大
缺点：密钥传递问题，安全性不好

非对称加密：


优点：
缺点：
混合型：


复习{
系统：必要的两个分区
/          /swap
基本命令
命令的基本命令
帮助
--help
man
info
}

权限。基本权限，特殊权限，访问控制权限，隐藏权限
suid 当用户执行该命令时会临时获得所有者的权限
guid 当用户执行该命令时会临时获得所属组的权限

粘贴位：一般作用于所有文都有全部权限的目录上，用户只能删除自己的文件，不能删除其他用户的文件

chattr
lsattr

虚拟化技术概述


虚拟化是对资源的抽象
分为平台虚拟化和操作系统虚拟化


hypersion vmm  虚拟机监视器


平台虚拟化：
半虚拟化，硬件辅助全虚拟化，软件辅助全虚拟化，

qemu支持的镜像文件格式
raw 简单的二进制镜像文件，支持稀疏文件，ext4/xfs记录数据不会占用真实的空间
qcow2 qemu推荐的镜像格式，支持稀疏文件，支持镜像，支持后端镜像

useradd 添加用户命令
useradd -option  username
usermod 
userdel -r username

查看用户信息
id username 
grep jim /etc/passwd
查看组信息
grep peter /etc/passwd

gpasswd 组管理

存储池，用来存储系统镜像的
分类：本地：目录，磁盘
远程：

调度器的作用：
1，是整个集群的唯一入口
2，检查后端成员的健康状态
3，负责调度策勒

数据加密的概述
两类：对程加密和非对称加密
对程加密：加密解密使用同一个钥
效率高，速度快，可以加密大量的数据
密钥的传输问题
 非对称加密：
一般是公钥加密，四要解密 
解决了密钥传递性问题

iptablesde 规则表和链
四表五连
不同的表是为了实现不同的功能，以达到专表专用的作用
filter 数据过滤，nat网络地址转换
mangle表数据包标记
raw 数据跟踪

集群分类：
硬件：f5
软件：lvs nginx 7层 haproxy
负载均衡，高可用，高性能计算
负载均衡主要是为了处理高并发请求的
有keepalived，Pacemaker两种服务可以做到
高可用主要是为了保持服务7*24小时在线的
高性能计算主要是为了处理大任务处理

lvs根据回包的方式分为：nat dr tun 隧道模式 keepalived fullnat

防火墙 iptables 四表的顺序
raw，mangle，nat，filter

软件包复习：rpm -qf 接文件绝对路径， 查询文件属于的软件包
实用：当配置文件损坏的时候可以查询软件包重新安装并修复
卸载软件的时候不建议用yum会删除依赖

 /etc/yum.conf
 cachedir     记录所下载软件缓存的位置
 keepcache  是否保留缓存软件 1为开启  0为关闭

Lb集群，基于四层的lvs，linux虚拟服务，内核的一部分，因此性能比较高
根据lvs回包的方式分为nat，dr，隧道模式

虚拟化是对资源的抽象
平台虚拟化和系统虚拟化
hypervisor 监控捕获虚拟机信息的并做翻译

复习：进程管理

基本命令
动态top，ps elf ps aux 
lsof -i:80  查看端口是否再被监听

kill -9  %1 后面接工作号

kill pid号
pkill 后面直接接进程名
xkill  图形化杀死
killall 后面也是接进程名

nice（-20 19 小优先） 开启一个进程时设置优先级
renice 已经启动的一个进程重新设置优先级
nice值变大，pri值变小

集群高可用pacemaker  
vip 提供给客户访问的虚拟ip
virt service apache脚本资源 检查后端成员健康状态并秒级切换
rs-list资源
lvm磁盘资源  做共享磁盘储存的磁盘 
filesystem 文件系统资源 挂载 
搭建整个集群所需要的工具 
coroSync 底层集群
pcs pacemaker 创建资源并管理配置
ipsan 做共享磁盘存储

调度算法有那几种：
轮询调度：
加权轮询：
iphash
最少链接
加权链接

磁盘阵列：raid 5 一般是4块磁盘，其中的有一块磁盘的空间是存检验码的
是raid0和raid1的折中方案，即考虑数据的安全性有考虑数据的读写性能

硬件存储设备：
易安信，ibm，netapp，惠普，戴尔

资源记录：
NS 用来指定操作dns服务器的主机名称
A ip4的正向解析
ptr 反向解析记录

存储 分类：
1，DAS 直接存储设备，无控制芯片，无高级功能，廉价
2，NAS 快照克隆
3，SAN 快照克隆容灾

file NAS      应用：集群（LB，HA，HPC）
block SAN         mysql
object        kvm/opestack

share   samba（后台，smb，nmb进程）  特性：实现跨系统平台文件共享

shell 复习

set 查看所有普通变量 
env 查看所有环境变量
定义环境变量的位置：
/etc/profile  所有用户
/etc/bashrc  所有用户
_________________________________________________________
～/.bashrc 某个用户
～/.bashrc-profile 某个用户

完全登陆shell ，非完全登陆shell

bashrc触发非登陆shell
profile触发完全登陆shell

特殊变量
$?



openfiler 通过web实现ipsan 和nas
过程创建pv-vg-lv
开启iscsi--target服务
开启设备映射
acl
特点：可以直接在裸机上进行操作搭建存储服务

mutipath
解决FC SAN Multipath的问题 把多个设备映射成为一个设备
san 提供块共享如果没有专业的存储设备就使用drbd

udev作用
1，为设备设置自定义的设备名
2，可以解决多个节点发现的存储设备名称不一致问题
3，用于ip san /fc san 发现块设备
具体用法：udevadm info -a -p /sys/class/net|block/***

rsync
1，用于实现数据增量同步
注：目标端服务器配置需要为rsync server端，客户端也需有 rsync client

rsync+cronde 优点与不足

 
drbd全称：distributed replicated  block devices
分布式块设备复制
工作原理：drbd primary 负责接收数据，将数据写道本地磁盘上并发送给另外一个主机secondary
，secondary主机再将接受到的数据同步到自己的本地磁盘上



